/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Restaurant.MenuItem;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AdminWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luoqi
 */
public class OrderMngJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem business;
    AdminRole role;


    public OrderMngJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userAccount = userAccount;
        this.role = (AdminRole) userAccount.getRole();
        populateTable();
        populateCombox();
    }
    
    public void populateCombox(){
        deliverCombo.removeAllItems();
        for(DeliveryMan dm:business.getDeliveryManDirectory().getDeliveryManList()){
            deliverCombo.addItem(dm);
        }

    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();

        model.setRowCount(0);
        //Supplier supplier = supplierDirectory.searchSupplier(keyWord);
        
        for(Order order:business.getMasterOrderCatalog().getOrderList()){
        
        
            for(OrderItem oi : order.getOrderItemList()){
        
                if(oi.getRestaurantName().equals(role.getRestaurant().getName()) && !(oi.isIsProcessbyRestaurant())){
        
                    Object row[] = new Object[4];
                    row[0] = oi; 
                    row[1] = oi.getQuatity();
                    row[2] = oi.getQuatity()*oi.getSalesPrice();
                    row[3] = order.getUser();
                    model.addRow(row);
                }    
            }
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        deliverCombo = new javax.swing.JComboBox();
        assignBtn = new javax.swing.JButton();

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Number", "Cost", "Customer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderTable);
        if (orderTable.getColumnModel().getColumnCount() > 0) {
            orderTable.getColumnModel().getColumn(0).setResizable(false);
            orderTable.getColumnModel().getColumn(1).setResizable(false);
            orderTable.getColumnModel().getColumn(2).setResizable(false);
            orderTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton2.setText("Refuse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        assignBtn.setText("Assign to Deliver");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(deliverCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(assignBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(deliverCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignBtn))
                .addContainerGap(179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = orderTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        OrderItem oi = (OrderItem)orderTable.getValueAt(row, 0);
        UserAccount receiver = (UserAccount) orderTable.getValueAt(row, 3);
        //DeliveryMan sender = (DeliveryMan)deliverCombo.getSelectedItem();
        
        AdminWorkRequest work = new AdminWorkRequest();
        work.setReceiver(receiver);
        //work.setSender(sender.getUser());
        work.setStatus(role.getRestaurant().getName()+"reject this order");
        work.setResult("Reject");
        work.setResolveDate(new Date());
        work.setOi(oi);
        userAccount.getWorkQueue().getWorkRequestList().add(work);
        business.getWorkQueue().getWorkRequestList().add(work);
        receiver.getWorkQueue().getWorkRequestList().add(work);
        //sender.getUser().getWorkQueue().getWorkRequestList().add(work);
        
        oi.setIsProcessbyRestaurant(true);
        populateTable();
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        
        int row = orderTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        OrderItem oi = (OrderItem)orderTable.getValueAt(row, 0);
        UserAccount receiver = (UserAccount) orderTable.getValueAt(row, 3);
        DeliveryMan sender = (DeliveryMan)deliverCombo.getSelectedItem();
        
        AdminWorkRequest work = new AdminWorkRequest();
        work.setReceiver(receiver);
        work.setSender(sender.getUser());
        work.setStatus(role.getRestaurant().getName()+"accept this order");
        work.setOi(oi);
        userAccount.getWorkQueue().getWorkRequestList().add(work);
        business.getWorkQueue().getWorkRequestList().add(work);
        receiver.getWorkQueue().getWorkRequestList().add(work);
        sender.getUser().getWorkQueue().getWorkRequestList().add(work);
        
        oi.setIsProcessbyRestaurant(true);
        populateTable();
    }//GEN-LAST:event_assignBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JComboBox deliverCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderTable;
    // End of variables declaration//GEN-END:variables
}
