/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.CarDirectory;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luoqi
 */
public class ManageCarPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private CarDirectory carDirectory;
    private ArrayList<Car> tempCarList;
    /**
     * Creates new form ManageCarPanel
     */

    ManageCarPanel(JPanel userProcessContainer, CarDirectory carDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.carDirectory = carDirectory; 
        tempCarList = carDirectory.getAvailableCarList(carDirectory.getAccountList());
        populateTable(tempCarList);
        
    }
    
    
    private void populateTable(ArrayList<Car> carList){
        
        DefaultTableModel dtm = (DefaultTableModel)carAvaliableTable.getModel();
        dtm.setRowCount(0);
        
        for(Car car : carList){
            
            Object row[] = new Object[8];
            row[0] = car;
            row[1] = car.getManufacturer();
            row[2] = car.getSeats();
            row[3] = car.getCity();
            row[4] = car.isStatus();
            row[5] = car.getModelNumber();
            row[6] = car.getMakeYear();
            row[7] = dateToStr(car.getCertificate());

            dtm.addRow(row);
            
        }
        
        
        int totalSize = this.carDirectory.getAccountList().size();
        int availableSize  = carDirectory.getAvailableCarList(carDirectory.getAccountList()).size();
        int notAvailSize = totalSize-availableSize;
        Date currentDate = new Date();
        
        availableNumTx.setText("avaliable car number :" + availableSize);
        NotAvailableNumTxt.setText("not avaliable car number :"+ notAvailSize);
        currentTimeTxt.setText(currentDate.toString());
        
        
        
               
        
    }
    
    public String dateToStr(Date dateDate) {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String dateString = formatter.format(dateDate);
        return dateString;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carAvaliableTable = new javax.swing.JTable();
        searchManuBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        availableNumTx = new javax.swing.JLabel();
        NotAvailableNumTxt = new javax.swing.JLabel();
        searchManufaTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        currentTimeTxt = new javax.swing.JLabel();
        searchMakeYearBtn = new javax.swing.JButton();
        makeYearTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        searchSerialNumBtn = new javax.swing.JButton();
        serialNumTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        searchModelNumBtn = new javax.swing.JButton();
        modelNumTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchCityBtn = new javax.swing.JButton();
        cityTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bottomSeatTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        topSeatNum = new javax.swing.JTextField();
        seatLimitSearchBtn = new javax.swing.JButton();
        listExpiredBtn = new javax.swing.JButton();
        listManuBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(900, 600));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        carAvaliableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car", "Manufacturer", "Seats", "City", "Available", "Model Number", "MadeYear", "Certificate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carAvaliableTable);
        if (carAvaliableTable.getColumnModel().getColumnCount() > 0) {
            carAvaliableTable.getColumnModel().getColumn(0).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(1).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(2).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(3).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(4).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(5).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(6).setResizable(false);
            carAvaliableTable.getColumnModel().getColumn(7).setResizable(false);
        }

        searchManuBtn.setText("Search");
        searchManuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchManuBtnActionPerformed(evt);
            }
        });

        viewBtn.setText("View Detail");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete Car");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        availableNumTx.setText("jLabel1");

        NotAvailableNumTxt.setText("jLabel2");

        searchManufaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchManufaTxtActionPerformed(evt);
            }
        });

        jLabel1.setText("Manufacturer :");

        currentTimeTxt.setText("jLabel2");

        searchMakeYearBtn.setText("Search");
        searchMakeYearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMakeYearBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Made Year :");

        searchSerialNumBtn.setText("Search");
        searchSerialNumBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSerialNumBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Serial Number :");

        searchModelNumBtn.setText("Search");
        searchModelNumBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchModelNumBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Modal Number :");

        searchCityBtn.setText("Search");
        searchCityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCityBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("City :");

        jLabel6.setText("Seats :");

        jLabel7.setText("-");

        seatLimitSearchBtn.setText("Search");
        seatLimitSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatLimitSearchBtnActionPerformed(evt);
            }
        });

        listExpiredBtn.setText("expired maintenance certificate");
        listExpiredBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listExpiredBtnActionPerformed(evt);
            }
        });

        listManuBtn.setText("Find All Manufactors");
        listManuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listManuBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(serialNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchSerialNumBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(makeYearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchMakeYearBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modelNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchModelNumBtn)))
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchManufaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NotAvailableNumTxt)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchManuBtn)
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))))
                        .addGap(14, 14, 14)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bottomSeatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(topSeatNum, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seatLimitSearchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(currentTimeTxt))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(listManuBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(listExpiredBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(searchCityBtn)))
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backBtn)
                    .addComponent(updateBtn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(availableNumTx)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(deleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewBtn)
                                .addGap(148, 148, 148))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(backBtn)
                        .addGap(28, 28, 28)
                        .addComponent(updateBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(availableNumTx)
                    .addComponent(NotAvailableNumTxt)
                    .addComponent(currentTimeTxt))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchManufaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchManuBtn)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(seatLimitSearchBtn)
                    .addComponent(topSeatNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bottomSeatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(makeYearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchMakeYearBtn)
                    .addComponent(jLabel5)
                    .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCityBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(serialNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSerialNumBtn)
                    .addComponent(listManuBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(modelNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchModelNumBtn)
                    .addComponent(listExpiredBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(viewBtn))
                .addGap(97, 97, 97))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = carAvaliableTable.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select any row to view details ","Warning",JOptionPane.WARNING_MESSAGE);

        }else{
            
            Car car = (Car)carAvaliableTable.getValueAt(selectedRow, 0); 
            ViewDetailPanel panel = new ViewDetailPanel(userProcessContainer,car,carDirectory);
            
            userProcessContainer.add("ViewDetailPanel",panel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
    }//GEN-LAST:event_viewBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = carAvaliableTable.getSelectedRow();
        
        if(selectedRow >= 0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete this car detail?", "Warning", dialogButton);
            
            if(dialogResult == JOptionPane.YES_OPTION){
                Car car = (Car)carAvaliableTable.getValueAt(selectedRow, 0);
                carDirectory.deleteAccount(car);
                tempCarList.remove(car);
                populateTable(tempCarList);
            }
            
     
        }else{
            JOptionPane.showMessageDialog(null, "Please select any row","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void searchManufaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchManufaTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchManufaTxtActionPerformed

    private void searchManuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchManuBtnActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getManufacturer().equals(searchManufaTxt.getText())){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{   
            tempCarList = result;
            populateTable(tempCarList);

        }        
    }//GEN-LAST:event_searchManuBtnActionPerformed

    private void searchMakeYearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMakeYearBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getMakeYear() == Integer.parseInt(makeYearTxt.getText())){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        }  
    }//GEN-LAST:event_searchMakeYearBtnActionPerformed

    private void searchSerialNumBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSerialNumBtnActionPerformed
        // TODO add your handling code here:
                ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getSerialNumber().equals(serialNumTxt.getText())){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        }  
    }//GEN-LAST:event_searchSerialNumBtnActionPerformed

    private void searchModelNumBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchModelNumBtnActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getModelNumber().equals(modelNumTxt.getText())){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        }  
    }//GEN-LAST:event_searchModelNumBtnActionPerformed

    private void searchCityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCityBtnActionPerformed
        // TODO add your handling code here:
        

        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getCity().equals(cityTxt.getText())){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        } 
    }//GEN-LAST:event_searchCityBtnActionPerformed

    private void seatLimitSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatLimitSearchBtnActionPerformed
        // TODO add your handling code here:
        
        int bottom = Integer.parseInt(bottomSeatTxt.getText());
        int top = Integer.parseInt(topSeatNum.getText());
        
        
        if(top == 0 || bottom > top){
            JOptionPane.showMessageDialog(null, "Please enter right seat number","Warning",JOptionPane.WARNING_MESSAGE);
            return;           
        }
        
        
        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getSeats()>= bottom && car.getSeats() <= top){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        }
        
        
        
        
    }//GEN-LAST:event_seatLimitSearchBtnActionPerformed

    private void listExpiredBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listExpiredBtnActionPerformed
        // TODO add your handling code here:
        Date current  = new Date();
        
        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(car.getCertificate().before(current)){
                result.add(car);
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        }
        
        
        
        
        
    }//GEN-LAST:event_listExpiredBtnActionPerformed

    private void listManuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listManuBtnActionPerformed
        // TODO add your handling code here:
        
        Set manufacture = new HashSet();
        ArrayList<Car> result = new ArrayList<Car>();
        
        for(Car car : carDirectory.getAccountList()){
            if(!(manufacture.contains(car.getManufacturer()))){
                result.add(car);
                manufacture.add(car.getManufacturer());
                
            }
        }
       
        if(result.isEmpty()){
            JOptionPane.showMessageDialog(null, "Manufacturer you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{            
            tempCarList = result;
            populateTable(tempCarList);

        }
               
        
    }//GEN-LAST:event_listManuBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        populateTable(tempCarList);
    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NotAvailableNumTxt;
    private javax.swing.JLabel availableNumTx;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bottomSeatTxt;
    private javax.swing.JTable carAvaliableTable;
    private javax.swing.JTextField cityTxt;
    private javax.swing.JLabel currentTimeTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listExpiredBtn;
    private javax.swing.JButton listManuBtn;
    private javax.swing.JTextField makeYearTxt;
    private javax.swing.JTextField modelNumTxt;
    private javax.swing.JButton searchCityBtn;
    private javax.swing.JButton searchMakeYearBtn;
    private javax.swing.JButton searchManuBtn;
    private javax.swing.JTextField searchManufaTxt;
    private javax.swing.JButton searchModelNumBtn;
    private javax.swing.JButton searchSerialNumBtn;
    private javax.swing.JButton seatLimitSearchBtn;
    private javax.swing.JTextField serialNumTxt;
    private javax.swing.JTextField topSeatNum;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
